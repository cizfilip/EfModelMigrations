// <auto-generated />

namespace EfModelMigrations.Resources
{
    using System;
    using System.CodeDom.Compiler;
    using System.Globalization;
    using System.Resources;
    using System.Reflection;
    using System.Threading;

    // <summary>
    // Strongly-typed and parameterized string resources.
    // </summary>
    [GeneratedCode("Resources.tt", "1.0.0.0")]
    internal static class Strings
    {
        // <summary>
        // A string like "Cannot create instance of type {0}."
        // </summary>
        internal static string CannotCreateInstance(object p0)
        {
            return EntityRes.GetString(EntityRes.CannotCreateInstance, p0);
        }

        // <summary>
        // A string like "Cannot find migration {0}."
        // </summary>
        internal static string CannotFindMigration(object p0)
        {
            return EntityRes.GetString(EntityRes.CannotFindMigration, p0);
        }

        // <summary>
        // A string like "Cannot find migration Id."
        // </summary>
        internal static string CannotFindMigrationId
        {
            get { return EntityRes.GetString(EntityRes.CannotFindMigrationId); }
        }

        // <summary>
        // A string like "Invalid model migration id."
        // </summary>
        internal static string InvalidModelMigrationId
        {
            get { return EntityRes.GetString(EntityRes.InvalidModelMigrationId); }
        }

        // <summary>
        // A string like "More than one type with base type {0} was found."
        // </summary>
        internal static string TypeFinder_MultipleTypesFound(object p0)
        {
            return EntityRes.GetString(EntityRes.TypeFinder_MultipleTypesFound, p0);
        }
    }

    // <summary>
    // AutoGenerated resource class. Usage:
    // string s = EntityRes.GetString(EntityRes.MyIdenfitier);
    // </summary>
    [GeneratedCode("Resources.tt", "1.0.0.0")]
    internal sealed class EntityRes
    {
        internal const string CannotCreateInstance = "CannotCreateInstance";
        internal const string CannotFindMigration = "CannotFindMigration";
        internal const string CannotFindMigrationId = "CannotFindMigrationId";
        internal const string InvalidModelMigrationId = "InvalidModelMigrationId";
        internal const string TypeFinder_MultipleTypesFound = "TypeFinder_MultipleTypesFound";

        private static EntityRes loader;
        private readonly ResourceManager resources;

        private EntityRes()
        {
            resources = new ResourceManager(
                "EfModelMigrations.Properties.Resources",
                typeof(EfModelMigrations.ModelMigration).Assembly);
        }

        private static EntityRes GetLoader()
        {
            if (loader == null)
            {
                var sr = new EntityRes();
                Interlocked.CompareExchange(ref loader, sr, null);
            }
            return loader;
        }

        private static CultureInfo Culture
        {
            get { return null /*use ResourceManager default, CultureInfo.CurrentUICulture*/; }
        }

        public static ResourceManager Resources
        {
            get { return GetLoader().resources; }
        }

        public static string GetString(string name, params object[] args)
        {
            var sys = GetLoader();
            if (sys == null)
            {
                return null;
            }

            var res = sys.resources.GetString(name, Culture);

            if (args != null
                && args.Length > 0)
            {
                for (var i = 0; i < args.Length; i ++)
                {
                    var value = args[i] as String;
                    if (value != null
                        && value.Length > 1024)
                    {
                        args[i] = value.Substring(0, 1024 - 3) + "...";
                    }
                }
                return String.Format(CultureInfo.CurrentCulture, res, args);
            }
            else
            {
                return res;
            }
        }

        public static string GetString(string name)
        {
            var sys = GetLoader();
            if (sys == null)
            {
                return null;
            }
            return sys.resources.GetString(name, Culture);
        }

        public static string GetString(string name, out bool usedFallback)
        {
            // always false for this version of gensr
            usedFallback = false;
            return GetString(name);
        }

        public static object GetObject(string name)
        {
            var sys = GetLoader();
            if (sys == null)
            {
                return null;
            }
            return sys.resources.GetObject(name, Culture);
        }
    }
}
