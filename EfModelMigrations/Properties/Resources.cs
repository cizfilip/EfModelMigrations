// <auto-generated />

namespace EfModelMigrations.Resources
{
    using System;
    using System.CodeDom.Compiler;
    using System.Globalization;
    using System.Resources;
    using System.Reflection;
    using System.Threading;

    // <summary>
    // Strongly-typed and parameterized string resources.
    // </summary>
    [GeneratedCode("Resources.tt", "1.0.0.0")]
    internal static class Strings
    {
        // <summary>
        // A string like "Cannot apply model migration. See inner exception for details."
        // </summary>
        internal static string ApplyMigrationError
        {
            get { return EntityRes.GetString(EntityRes.ApplyMigrationError); }
        }

        // <summary>
        // A string like "Could not load assembly '{0}'."
        // </summary>
        internal static string BaseRunner_AssemblyNotFound(object p0)
        {
            return EntityRes.GetString(EntityRes.BaseRunner_AssemblyNotFound, p0);
        }

        // <summary>
        // A string like "Project failed to build."
        // </summary>
        internal static string CannotBuildProject
        {
            get { return EntityRes.GetString(EntityRes.CannotBuildProject); }
        }

        // <summary>
        // A string like "Cannot create command instance. Command {0} not found."
        // </summary>
        internal static string CannotCreateCommandInstance(object p0)
        {
            return EntityRes.GetString(EntityRes.CannotCreateCommandInstance, p0);
        }

        // <summary>
        // A string like "Cannot create instance of type {0}."
        // </summary>
        internal static string CannotCreateInstance(object p0)
        {
            return EntityRes.GetString(EntityRes.CannotCreateInstance, p0);
        }

        // <summary>
        // A string like "Cannot find class with name {0} in model project."
        // </summary>
        internal static string CannotFindClassInModelProject(object p0)
        {
            return EntityRes.GetString(EntityRes.CannotFindClassInModelProject, p0);
        }

        // <summary>
        // A string like "Cannot find configuration class in project."
        // </summary>
        internal static string CannotFindConfiguration
        {
            get { return EntityRes.GetString(EntityRes.CannotFindConfiguration); }
        }

        // <summary>
        // A string like "Cannot find enum with name {0} in model project."
        // </summary>
        internal static string CannotFindEnumInModelProject(object p0)
        {
            return EntityRes.GetString(EntityRes.CannotFindEnumInModelProject, p0);
        }

        // <summary>
        // A string like "Cannot find migration {0}."
        // </summary>
        internal static string CannotFindMigration(object p0)
        {
            return EntityRes.GetString(EntityRes.CannotFindMigration, p0);
        }

        // <summary>
        // A string like "Cannot find migration Id for migration {0}."
        // </summary>
        internal static string CannotFindMigrationId(object p0)
        {
            return EntityRes.GetString(EntityRes.CannotFindMigrationId, p0);
        }

        // <summary>
        // A string like "The argument '{0}' cannot be null, empty or contain only white space."
        // </summary>
        internal static string Check_NotEmpty(object p0)
        {
            return EntityRes.GetString(EntityRes.Check_NotEmpty, p0);
        }

        // <summary>
        // A string like "The argument '{0}' cannot be null or empty."
        // </summary>
        internal static string Check_NotNullOrEmpty(object p0)
        {
            return EntityRes.GetString(EntityRes.Check_NotNullOrEmpty, p0);
        }

        // <summary>
        // A string like "Cannot generate property, because property type {0} is not supported."
        // </summary>
        internal static string CodeGenerator_PropertyTypeNotSupported(object p0)
        {
            return EntityRes.GetString(EntityRes.CodeGenerator_PropertyTypeNotSupported, p0);
        }

        // <summary>
        // A string like "Invalid CodeModelVisibility."
        // </summary>
        internal static string CodeModelVisibilityInvalid
        {
            get { return EntityRes.GetString(EntityRes.CodeModelVisibilityInvalid); }
        }

        // <summary>
        // A string like "Command name not specified."
        // </summary>
        internal static string CommandNameNotSpecified
        {
            get { return EntityRes.GetString(EntityRes.CommandNameNotSpecified); }
        }

        // <summary>
        // A string like "Name of class for new properties is missing."
        // </summary>
        internal static string Commands_AddProperties_ClassNameMissing
        {
            get { return EntityRes.GetString(EntityRes.Commands_AddProperties_ClassNameMissing); }
        }

        // <summary>
        // A string like "No properties was specified to add to class {0}."
        // </summary>
        internal static string Commands_AddProperties_NoProperties(object p0)
        {
            return EntityRes.GetString(EntityRes.Commands_AddProperties_NoProperties, p0);
        }

        // <summary>
        // A string like "Name od the new class is missing."
        // </summary>
        internal static string Commands_CreateClass_ClassNameMissing
        {
            get { return EntityRes.GetString(EntityRes.Commands_CreateClass_ClassNameMissing); }
        }

        // <summary>
        // A string like "Properties for the new class {0} is missing."
        // </summary>
        internal static string Commands_CreateClass_PropertiesMissing(object p0)
        {
            return EntityRes.GetString(EntityRes.Commands_CreateClass_PropertiesMissing, p0);
        }

        // <summary>
        // A string like "Migration name not specified."
        // </summary>
        internal static string Commands_MigrationNameMissing
        {
            get { return EntityRes.GetString(EntityRes.Commands_MigrationNameMissing); }
        }

        // <summary>
        // A string like "Name of class to remove is missing."
        // </summary>
        internal static string Commands_RemoveClass_ClassNameMissing
        {
            get { return EntityRes.GetString(EntityRes.Commands_RemoveClass_ClassNameMissing); }
        }

        // <summary>
        // A string like "Name of class for removing properties is missing."
        // </summary>
        internal static string Commands_RemoveProperties_ClassNameMissing
        {
            get { return EntityRes.GetString(EntityRes.Commands_RemoveProperties_ClassNameMissing); }
        }

        // <summary>
        // A string like "Properties to remove from class {0} missing."
        // </summary>
        internal static string Commands_RemoveProperties_PropertiesMissing(object p0)
        {
            return EntityRes.GetString(EntityRes.Commands_RemoveProperties_PropertiesMissing, p0);
        }

        // <summary>
        // A string like "Cannot remove property {0} from class {1}, property does not exist."
        // </summary>
        internal static string Commands_RemoveProperties_PropertyNotFound(object p0, object p1)
        {
            return EntityRes.GetString(EntityRes.Commands_RemoveProperties_PropertyNotFound, p0, p1);
        }

        // <summary>
        // A string like "New class name missing."
        // </summary>
        internal static string Commands_RenameClass_NewClassNameMissing
        {
            get { return EntityRes.GetString(EntityRes.Commands_RenameClass_NewClassNameMissing); }
        }

        // <summary>
        // A string like "Old class name missing."
        // </summary>
        internal static string Commands_RenameClass_OldClassNameMissing
        {
            get { return EntityRes.GetString(EntityRes.Commands_RenameClass_OldClassNameMissing); }
        }

        // <summary>
        // A string like "Class name for renaming property missing."
        // </summary>
        internal static string Commands_RenameProperty_ClassNameMissing
        {
            get { return EntityRes.GetString(EntityRes.Commands_RenameProperty_ClassNameMissing); }
        }

        // <summary>
        // A string like "New property name is missing."
        // </summary>
        internal static string Commands_RenameProperty_NewPropertyMissing
        {
            get { return EntityRes.GetString(EntityRes.Commands_RenameProperty_NewPropertyMissing); }
        }

        // <summary>
        // A string like "Old property name is missing."
        // </summary>
        internal static string Commands_RenameProperty_OldPropertyMissing
        {
            get { return EntityRes.GetString(EntityRes.Commands_RenameProperty_OldPropertyMissing); }
        }

        // <summary>
        // A string like "Some operations in migration {0} may cause data loss in database! If you really want to execute this migration rerun the migrate command with -Force parameter."
        // </summary>
        internal static string DataInDbMayBeLost(object p0)
        {
            return EntityRes.GetString(EntityRes.DataInDbMayBeLost, p0);
        }

        // <summary>
        // A string like "The type '{0}' does not inherit from DbMigrationsConfiguration. The ModelMigrationsConfiguration.DbMigrationsConfigurationType property must be set to a type that inherits from DbMigrationsConfiguration."
        // </summary>
        internal static string DbMigrationsConfigurationTypeIsInvalid(object p0)
        {
            return EntityRes.GetString(EntityRes.DbMigrationsConfigurationTypeIsInvalid, p0);
        }

        // <summary>
        // A string like "Cannot create db migrations configuration, DbMigrationsConfigurationType was not specified."
        // </summary>
        internal static string DbMigrationsConfigurationTypeNotSpecified
        {
            get { return EntityRes.GetString(EntityRes.DbMigrationsConfigurationTypeNotSpecified); }
        }

        // <summary>
        // A string like "Unknown type of EdmProperty."
        // </summary>
        internal static string EdmPropertyUnknown
        {
            get { return EntityRes.GetString(EntityRes.EdmPropertyUnknown); }
        }

        // <summary>
        // A string like "Cannot find association from {0} to {1} in entity framework metadata."
        // </summary>
        internal static string EfModel_CannotFindAssociation(object p0, object p1)
        {
            return EntityRes.GetString(EntityRes.EfModel_CannotFindAssociation, p0, p1);
        }

        // <summary>
        // A string like "annot find class {0} in entity framework metadata."
        // </summary>
        internal static string EfModel_CannotFindClass(object p0)
        {
            return EntityRes.GetString(EntityRes.EfModel_CannotFindClass, p0);
        }

        // <summary>
        // A string like "Cannot find column for property {0} in class {1}."
        // </summary>
        internal static string EfModel_CannotFindColumn(object p0, object p1)
        {
            return EntityRes.GetString(EntityRes.EfModel_CannotFindColumn, p0, p1);
        }

        // <summary>
        // A string like "Cannot find join table for association from {0} to {1} in entity framework metadata."
        // </summary>
        internal static string EfModel_CannotFindJoinTable(object p0, object p1)
        {
            return EntityRes.GetString(EntityRes.EfModel_CannotFindJoinTable, p0, p1);
        }

        // <summary>
        // A string like "Creating ModelConfiguration."
        // </summary>
        internal static string EnableCommand_CreatingConfiguration
        {
            get { return EntityRes.GetString(EntityRes.EnableCommand_CreatingConfiguration); }
        }

        // <summary>
        // A string like "Creating new DbContext: {0}."
        // </summary>
        internal static string EnableCommand_CreatingDbContext(object p0)
        {
            return EntityRes.GetString(EntityRes.EnableCommand_CreatingDbContext, p0);
        }

        // <summary>
        // A string like "Enabling Entity Framework database migrations..."
        // </summary>
        internal static string EnableCommand_EnablingEfMigrations
        {
            get { return EntityRes.GetString(EntityRes.EnableCommand_EnablingEfMigrations); }
        }

        // <summary>
        // A string like "Migration {0} was succesfully rescaffolded."
        // </summary>
        internal static string ExecuteCommand_MigrationRescaffolded(object p0)
        {
            return EntityRes.GetString(EntityRes.ExecuteCommand_MigrationRescaffolded, p0);
        }

        // <summary>
        // A string like "Migration {0} was succesfully scaffolded."
        // </summary>
        internal static string ExecuteCommand_MigrationScaffolded(object p0)
        {
            return EntityRes.GetString(EntityRes.ExecuteCommand_MigrationScaffolded, p0);
        }

        // <summary>
        // A string like "Rescaffolding migration from command {0} ..."
        // </summary>
        internal static string ExecuteCommand_RescaffoldingMigration(object p0)
        {
            return EntityRes.GetString(EntityRes.ExecuteCommand_RescaffoldingMigration, p0);
        }

        // <summary>
        // A string like "Scaffolding migration from command {0} ..."
        // </summary>
        internal static string ExecuteCommand_ScaffoldingMigration(object p0)
        {
            return EntityRes.GetString(EntityRes.ExecuteCommand_ScaffoldingMigration, p0);
        }

        // <summary>
        // A string like "Cannot retrieve foreign key definition from migration."
        // </summary>
        internal static string ForeignKeyDefinitionExtractionFailed
        {
            get { return EntityRes.GetString(EntityRes.ForeignKeyDefinitionExtractionFailed); }
        }

        // <summary>
        // A string like "Cannot retrieve old content for file {0}! See inner exception."
        // </summary>
        internal static string HistoryTracker_CannotGetOldContent(object p0)
        {
            return EntityRes.GetString(EntityRes.HistoryTracker_CannotGetOldContent, p0);
        }

        // <summary>
        // A string like "Error during reverting history! See inner exception."
        // </summary>
        internal static string HistoryTracker_Error
        {
            get { return EntityRes.GetString(EntityRes.HistoryTracker_Error); }
        }

        // <summary>
        // A string like "Invalid history item type."
        // </summary>
        internal static string HistoryTracker_InvalidItemType
        {
            get { return EntityRes.GetString(EntityRes.HistoryTracker_InvalidItemType); }
        }

        // <summary>
        // A string like "Project item {0} contains more than one file."
        // </summary>
        internal static string HistoryTracker_MoreThanOneFileInProjectItem(object p0)
        {
            return EntityRes.GetString(EntityRes.HistoryTracker_MoreThanOneFileInProjectItem, p0);
        }

        // <summary>
        // A string like "The index with name '{0}' on table '{1}' has the same column order of '{2}' specified for columns '{3}' and '{4}'. Make sure a different order value is used for the IndexAttribute on each column of a multi-column index."
        // </summary>
        internal static string IndexOrderInvalid(object p0, object p1, object p2, object p3, object p4)
        {
            return EntityRes.GetString(EntityRes.IndexOrderInvalid, p0, p1, p2, p3, p4);
        }

        // <summary>
        // A string like "Invalid model migration id."
        // </summary>
        internal static string InvalidModelMigrationId
        {
            get { return EntityRes.GetString(EntityRes.InvalidModelMigrationId); }
        }

        // <summary>
        // A string like "Applying model changes..."
        // </summary>
        internal static string LoggingModelMigrator_ApplyingModelChanges
        {
            get { return EntityRes.GetString(EntityRes.LoggingModelMigrator_ApplyingModelChanges); }
        }

        // <summary>
        // A string like "Generating Db migration..."
        // </summary>
        internal static string LoggingModelMigrator_GeneratingDbMigration
        {
            get { return EntityRes.GetString(EntityRes.LoggingModelMigrator_GeneratingDbMigration); }
        }

        // <summary>
        // A string like "{0} migrations: [{1}]."
        // </summary>
        internal static string LoggingModelMigrator_MigrateList(object p0, object p1)
        {
            return EntityRes.GetString(EntityRes.LoggingModelMigrator_MigrateList, p0, p1);
        }

        // <summary>
        // A string like "{0} migration: {1}."
        // </summary>
        internal static string LoggingModelMigrator_MigrateOne(object p0, object p1)
        {
            return EntityRes.GetString(EntityRes.LoggingModelMigrator_MigrateOne, p0, p1);
        }

        // <summary>
        // A string like "Migration {0} was succesfully {1}."
        // </summary>
        internal static string LoggingModelMigrator_MigrateSuccess(object p0, object p1)
        {
            return EntityRes.GetString(EntityRes.LoggingModelMigrator_MigrateSuccess, p0, p1);
        }

        // <summary>
        // A string like "No migrations to apply or revert."
        // </summary>
        internal static string LoggingModelMigrator_NoMigrations
        {
            get { return EntityRes.GetString(EntityRes.LoggingModelMigrator_NoMigrations); }
        }

        // <summary>
        // A string like "Updating database..."
        // </summary>
        internal static string LoggingModelMigrator_UpdatingDb
        {
            get { return EntityRes.GetString(EntityRes.LoggingModelMigrator_UpdatingDb); }
        }

        // <summary>
        // A string like "Cannot remove mapping information of type {0}. Remover implementation is missing."
        // </summary>
        internal static string MappingInformationRemover_MissingImplementation(object p0)
        {
            return EntityRes.GetString(EntityRes.MappingInformationRemover_MissingImplementation, p0);
        }

        // <summary>
        // A string like "Invalid CSharpTokenType."
        // </summary>
        internal static string MappingInformationsGenerator_InvalidCSharpTokenType
        {
            get { return EntityRes.GetString(EntityRes.MappingInformationsGenerator_InvalidCSharpTokenType); }
        }

        // <summary>
        // A string like "Cannot generate mapping information, because parameter of type {0} is not supported."
        // </summary>
        internal static string MappingInformationsGenerator_ParameterNotSupported(object p0)
        {
            return EntityRes.GetString(EntityRes.MappingInformationsGenerator_ParameterNotSupported, p0);
        }

        // <summary>
        // A string like "Inversion migration operation was requested but not provided before."
        // </summary>
        internal static string MigrationOperationInverseMissing
        {
            get { return EntityRes.GetString(EntityRes.MigrationOperationInverseMissing); }
        }

        // <summary>
        // A string like "Cannot retrieve method code from method {0}."
        // </summary>
        internal static string ModelChangesExecutor_CannotGetMethodCode(object p0)
        {
            return EntityRes.GetString(EntityRes.ModelChangesExecutor_CannotGetMethodCode, p0);
        }

        // <summary>
        // A string like "Cannot update method code in method {0}."
        // </summary>
        internal static string ModelChangesExecutor_CannotSetMethodCode(object p0)
        {
            return EntityRes.GetString(EntityRes.ModelChangesExecutor_CannotSetMethodCode, p0);
        }

        // <summary>
        // A string like "Cannot add DbSet property to DbContext for class {0} in model project."
        // </summary>
        internal static string ModelChangesExecutor_FailedToAddDbSetProperty(object p0)
        {
            return EntityRes.GetString(EntityRes.ModelChangesExecutor_FailedToAddDbSetProperty, p0);
        }

        // <summary>
        // A string like "Cannot add mapping information of type {0}. See inner exception."
        // </summary>
        internal static string ModelChangesExecutor_FailedToAddMappingInformation(object p0)
        {
            return EntityRes.GetString(EntityRes.ModelChangesExecutor_FailedToAddMappingInformation, p0);
        }

        // <summary>
        // A string like "Cannot add property {0} to class {1} in model project."
        // </summary>
        internal static string ModelChangesExecutor_FailedToAddProperty(object p0, object p1)
        {
            return EntityRes.GetString(EntityRes.ModelChangesExecutor_FailedToAddProperty, p0, p1);
        }

        // <summary>
        // A string like "Cannot create class {0} in model project."
        // </summary>
        internal static string ModelChangesExecutor_FailedToCreateClass(object p0)
        {
            return EntityRes.GetString(EntityRes.ModelChangesExecutor_FailedToCreateClass, p0);
        }

        // <summary>
        // A string like "Cannot find DbSet property for class {0} in DbContext."
        // </summary>
        internal static string ModelChangesExecutor_FailedToFindDbSetProperty(object p0)
        {
            return EntityRes.GetString(EntityRes.ModelChangesExecutor_FailedToFindDbSetProperty, p0);
        }

        // <summary>
        // A string like "Cannot find method {0} in class {1}."
        // </summary>
        internal static string ModelChangesExecutor_FailedToFindMethod(object p0, object p1)
        {
            return EntityRes.GetString(EntityRes.ModelChangesExecutor_FailedToFindMethod, p0, p1);
        }

        // <summary>
        // A string like "Cannot find property {0} in class {1}."
        // </summary>
        internal static string ModelChangesExecutor_FailedToFindProperty(object p0, object p1)
        {
            return EntityRes.GetString(EntityRes.ModelChangesExecutor_FailedToFindProperty, p0, p1);
        }

        // <summary>
        // A string like "Cannot remove class {0} from model project."
        // </summary>
        internal static string ModelChangesExecutor_FailedToRemoveClass(object p0)
        {
            return EntityRes.GetString(EntityRes.ModelChangesExecutor_FailedToRemoveClass, p0);
        }

        // <summary>
        // A string like "Cannot remove DbSet property from DbContext for class {0} in model project."
        // </summary>
        internal static string ModelChangesExecutor_FailedToRemoveDbSetProperty(object p0)
        {
            return EntityRes.GetString(EntityRes.ModelChangesExecutor_FailedToRemoveDbSetProperty, p0);
        }

        // <summary>
        // A string like "Cannot remove property {0} from class {1} in model project."
        // </summary>
        internal static string ModelChangesExecutor_FailedToRemoveProperty(object p0, object p1)
        {
            return EntityRes.GetString(EntityRes.ModelChangesExecutor_FailedToRemoveProperty, p0, p1);
        }

        // <summary>
        // A string like "Cannot rename class {0} in model project."
        // </summary>
        internal static string ModelChangesExecutor_FailedToRenameClass(object p0)
        {
            return EntityRes.GetString(EntityRes.ModelChangesExecutor_FailedToRenameClass, p0);
        }

        // <summary>
        // A string like "Cannot rename property {0} from class {1} in model project."
        // </summary>
        internal static string ModelChangesExecutor_FailedToRenameProperty(object p0, object p1)
        {
            return EntityRes.GetString(EntityRes.ModelChangesExecutor_FailedToRenameProperty, p0, p1);
        }

        // <summary>
        // A string like "Cannot set base class {0} for class {1} in model project."
        // </summary>
        internal static string ModelChangesExecutor_FailedToSetBaseClass(object p0, object p1)
        {
            return EntityRes.GetString(EntityRes.ModelChangesExecutor_FailedToSetBaseClass, p0, p1);
        }

        // <summary>
        // A string like "Cannot execute model change operation {0}. Executor implementation is missing."
        // </summary>
        internal static string ModelChangesExecutor_MissingImplementation(object p0)
        {
            return EntityRes.GetString(EntityRes.ModelChangesExecutor_MissingImplementation, p0);
        }

        // <summary>
        // A string like "Model migrations was successfully enabled in current project."
        // </summary>
        internal static string ModelEnableSuccessfull
        {
            get { return EntityRes.GetString(EntityRes.ModelEnableSuccessfull); }
        }

        // <summary>
        // A string like "Cannot generate migration code for model transformation {0}. Generator implementation is missing."
        // </summary>
        internal static string ModelMigrationGenerator_ImplementationMissing(object p0)
        {
            return EntityRes.GetString(EntityRes.ModelMigrationGenerator_ImplementationMissing, p0);
        }

        // <summary>
        // A string like "Cannot generate migration code for property type {0}. Generator implementation is missing."
        // </summary>
        internal static string ModelMigrationGenerator_PropertyImplementationMissing(object p0)
        {
            return EntityRes.GetString(EntityRes.ModelMigrationGenerator_PropertyImplementationMissing, p0);
        }

        // <summary>
        // A string like "PrimitiveTypeKind.SByte not supported as property type."
        // </summary>
        internal static string ModelMigrationGenerator_SBytePropertyNotSupported
        {
            get { return EntityRes.GetString(EntityRes.ModelMigrationGenerator_SBytePropertyNotSupported); }
        }

        // <summary>
        // A string like "Model migrations was already enabled."
        // </summary>
        internal static string ModelMigrationsAlreadyEnabled
        {
            get { return EntityRes.GetString(EntityRes.ModelMigrationsAlreadyEnabled); }
        }

        // <summary>
        // A string like "The 'ModelMigrationsDirectory' property of 'ModelMigrationsConfiguration' was set to the absolute path '{0}'. The model migrations directory must be set to a relative path for a sub-directory under the Visual Studio project root."
        // </summary>
        internal static string ModelMigrationsDirectoryIsRooted(object p0)
        {
            return EntityRes.GetString(EntityRes.ModelMigrationsDirectoryIsRooted, p0);
        }

        // <summary>
        // A string like "Model migrations was not enabled."
        // </summary>
        internal static string ModelMigrationsNotEnabled
        {
            get { return EntityRes.GetString(EntityRes.ModelMigrationsNotEnabled); }
        }

        // <summary>
        // A string like "Multiple migrations with name {0} was found."
        // </summary>
        internal static string MultipleMigrationsFound(object p0)
        {
            return EntityRes.GetString(EntityRes.MultipleMigrationsFound, p0);
        }

        // <summary>
        // A string like "Unable to find any migration to apply or revert."
        // </summary>
        internal static string NoMigrationsToApplyOrRevert
        {
            get { return EntityRes.GetString(EntityRes.NoMigrationsToApplyOrRevert); }
        }

        // <summary>
        // A string like "Unknown visibility {0}. Only {1} can be specified."
        // </summary>
        internal static string ParameterParser_InvalidVisibility(object p0, object p1)
        {
            return EntityRes.GetString(EntityRes.ParameterParser_InvalidVisibility, p0, p1);
        }

        // <summary>
        // A string like "Unknown property type {0}. Type is not primitive or enum."
        // </summary>
        internal static string ParameterParser_UnknownPropertyType(object p0)
        {
            return EntityRes.GetString(EntityRes.ParameterParser_UnknownPropertyType, p0);
        }

        // <summary>
        // A string like "Wrong property format, use [PropertyName]:[PropertyType], example: Name:string"
        // </summary>
        internal static string ParameterParser_WrongPropertyFormat
        {
            get { return EntityRes.GetString(EntityRes.ParameterParser_WrongPropertyFormat); }
        }

        // <summary>
        // A string like "Transformation {0} can not be applied."
        // </summary>
        internal static string PreconditionFailed(object p0)
        {
            return EntityRes.GetString(EntityRes.PreconditionFailed, p0);
        }

        // <summary>
        // A string like "Class {0} already exists in model."
        // </summary>
        internal static string Precondition_ClassExists(object p0)
        {
            return EntityRes.GetString(EntityRes.Precondition_ClassExists, p0);
        }

        // <summary>
        // A string like "Class {0} has already base defined."
        // </summary>
        internal static string Precondition_ClassHasBase(object p0)
        {
            return EntityRes.GetString(EntityRes.Precondition_ClassHasBase, p0);
        }

        // <summary>
        // A string like "Class {0} does not exist in model."
        // </summary>
        internal static string Precondition_ClassNotExists(object p0)
        {
            return EntityRes.GetString(EntityRes.Precondition_ClassNotExists, p0);
        }

        // <summary>
        // A string like "Properties {0} are not defined in class {1}."
        // </summary>
        internal static string Precondition_PropertiesNotExistsInClass(object p0, object p1)
        {
            return EntityRes.GetString(EntityRes.Precondition_PropertiesNotExistsInClass, p0, p1);
        }

        // <summary>
        // A string like "Invalid PrimitiveTypeKind."
        // </summary>
        internal static string PrimitiveTypeKindInvalid
        {
            get { return EntityRes.GetString(EntityRes.PrimitiveTypeKindInvalid); }
        }

        // <summary>
        // A string like "Specified path must be absolute."
        // </summary>
        internal static string ProjectExtensions_PathMustBeAbsolute
        {
            get { return EntityRes.GetString(EntityRes.ProjectExtensions_PathMustBeAbsolute); }
        }

        // <summary>
        // A string like "Specified path must be relative to project directory."
        // </summary>
        internal static string ProjectExtensions_PathMustBeRelative
        {
            get { return EntityRes.GetString(EntityRes.ProjectExtensions_PathMustBeRelative); }
        }

        // <summary>
        // A string like "Cannot retrieve property definition from migration."
        // </summary>
        internal static string PropertyDefinitionExtractionFailed
        {
            get { return EntityRes.GetString(EntityRes.PropertyDefinitionExtractionFailed); }
        }

        // <summary>
        // A string like "Invalid RelationshipMultiplicity."
        // </summary>
        internal static string RelationshipMultiplicityInvalid
        {
            get { return EntityRes.GetString(EntityRes.RelationshipMultiplicityInvalid); }
        }

        // <summary>
        // A string like "Cannot rescaffold last model migration, there must be exactly one pending migration in project."
        // </summary>
        internal static string Rescaffold_NoPendingMigration
        {
            get { return EntityRes.GetString(EntityRes.Rescaffold_NoPendingMigration); }
        }

        // <summary>
        // A string like "Cannot rescaffold last model migration, specified migration name {0} is not same as pending migration name {1}. "
        // </summary>
        internal static string Rescaffold_SpecifiedNameNotSameAsPending(object p0, object p1)
        {
            return EntityRes.GetString(EntityRes.Rescaffold_SpecifiedNameNotSameAsPending, p0, p1);
        }

        // <summary>
        // A string like "Inversion transformation was requested but not provided before."
        // </summary>
        internal static string TransformationInverseMissing
        {
            get { return EntityRes.GetString(EntityRes.TransformationInverseMissing); }
        }

        // <summary>
        // A string like "Foreign key properties and foreign key column names are both specified. You can specify only foreign key properties or foreign key column names not both."
        // </summary>
        internal static string Transformations_FkNamesAndFkPropsBothSpecified
        {
            get { return EntityRes.GetString(EntityRes.Transformations_FkNamesAndFkPropsBothSpecified); }
        }

        // <summary>
        // A string like "Principal navigation property in one to many association must have IsCollection set to true."
        // </summary>
        internal static string Transformations_InvalidManyNavigationProperty
        {
            get { return EntityRes.GetString(EntityRes.Transformations_InvalidManyNavigationProperty); }
        }

        // <summary>
        // A string like "Invalid association multiplicity for many to many association."
        // </summary>
        internal static string Transformations_InvalidMultiplicityManyToMany
        {
            get { return EntityRes.GetString(EntityRes.Transformations_InvalidMultiplicityManyToMany); }
        }

        // <summary>
        // A string like "Invalid association multiplicity for one to many association."
        // </summary>
        internal static string Transformations_InvalidMultiplicityOneToMany
        {
            get { return EntityRes.GetString(EntityRes.Transformations_InvalidMultiplicityOneToMany); }
        }

        // <summary>
        // A string like "Invalid association multiplicity for one to one foreign key association."
        // </summary>
        internal static string Transformations_InvalidMultiplicityOneToOneFk
        {
            get { return EntityRes.GetString(EntityRes.Transformations_InvalidMultiplicityOneToOneFk); }
        }

        // <summary>
        // A string like "Invalid association multiplicity for one to one primary key association."
        // </summary>
        internal static string Transformations_InvalidMultiplicityOneToOnePk
        {
            get { return EntityRes.GetString(EntityRes.Transformations_InvalidMultiplicityOneToOnePk); }
        }

        // <summary>
        // A string like "You must specify at least one navigation property."
        // </summary>
        internal static string Transformations_NavigationPropertyMissing
        {
            get { return EntityRes.GetString(EntityRes.Transformations_NavigationPropertyMissing); }
        }

        // <summary>
        // A string like "More than one type with base type {0} was found."
        // </summary>
        internal static string TypeFinder_MultipleTypesFound(object p0)
        {
            return EntityRes.GetString(EntityRes.TypeFinder_MultipleTypesFound, p0);
        }
    }

    // <summary>
    // AutoGenerated resource class. Usage:
    // string s = EntityRes.GetString(EntityRes.MyIdenfitier);
    // </summary>
    [GeneratedCode("Resources.tt", "1.0.0.0")]
    internal sealed class EntityRes
    {
        internal const string ApplyMigrationError = "ApplyMigrationError";
        internal const string BaseRunner_AssemblyNotFound = "BaseRunner_AssemblyNotFound";
        internal const string CannotBuildProject = "CannotBuildProject";
        internal const string CannotCreateCommandInstance = "CannotCreateCommandInstance";
        internal const string CannotCreateInstance = "CannotCreateInstance";
        internal const string CannotFindClassInModelProject = "CannotFindClassInModelProject";
        internal const string CannotFindConfiguration = "CannotFindConfiguration";
        internal const string CannotFindEnumInModelProject = "CannotFindEnumInModelProject";
        internal const string CannotFindMigration = "CannotFindMigration";
        internal const string CannotFindMigrationId = "CannotFindMigrationId";
        internal const string Check_NotEmpty = "Check_NotEmpty";
        internal const string Check_NotNullOrEmpty = "Check_NotNullOrEmpty";
        internal const string CodeGenerator_PropertyTypeNotSupported = "CodeGenerator_PropertyTypeNotSupported";
        internal const string CodeModelVisibilityInvalid = "CodeModelVisibilityInvalid";
        internal const string CommandNameNotSpecified = "CommandNameNotSpecified";
        internal const string Commands_AddProperties_ClassNameMissing = "Commands_AddProperties_ClassNameMissing";
        internal const string Commands_AddProperties_NoProperties = "Commands_AddProperties_NoProperties";
        internal const string Commands_CreateClass_ClassNameMissing = "Commands_CreateClass_ClassNameMissing";
        internal const string Commands_CreateClass_PropertiesMissing = "Commands_CreateClass_PropertiesMissing";
        internal const string Commands_MigrationNameMissing = "Commands_MigrationNameMissing";
        internal const string Commands_RemoveClass_ClassNameMissing = "Commands_RemoveClass_ClassNameMissing";
        internal const string Commands_RemoveProperties_ClassNameMissing = "Commands_RemoveProperties_ClassNameMissing";
        internal const string Commands_RemoveProperties_PropertiesMissing = "Commands_RemoveProperties_PropertiesMissing";
        internal const string Commands_RemoveProperties_PropertyNotFound = "Commands_RemoveProperties_PropertyNotFound";
        internal const string Commands_RenameClass_NewClassNameMissing = "Commands_RenameClass_NewClassNameMissing";
        internal const string Commands_RenameClass_OldClassNameMissing = "Commands_RenameClass_OldClassNameMissing";
        internal const string Commands_RenameProperty_ClassNameMissing = "Commands_RenameProperty_ClassNameMissing";
        internal const string Commands_RenameProperty_NewPropertyMissing = "Commands_RenameProperty_NewPropertyMissing";
        internal const string Commands_RenameProperty_OldPropertyMissing = "Commands_RenameProperty_OldPropertyMissing";
        internal const string DataInDbMayBeLost = "DataInDbMayBeLost";
        internal const string DbMigrationsConfigurationTypeIsInvalid = "DbMigrationsConfigurationTypeIsInvalid";
        internal const string DbMigrationsConfigurationTypeNotSpecified = "DbMigrationsConfigurationTypeNotSpecified";
        internal const string EdmPropertyUnknown = "EdmPropertyUnknown";
        internal const string EfModel_CannotFindAssociation = "EfModel_CannotFindAssociation";
        internal const string EfModel_CannotFindClass = "EfModel_CannotFindClass";
        internal const string EfModel_CannotFindColumn = "EfModel_CannotFindColumn";
        internal const string EfModel_CannotFindJoinTable = "EfModel_CannotFindJoinTable";
        internal const string EnableCommand_CreatingConfiguration = "EnableCommand_CreatingConfiguration";
        internal const string EnableCommand_CreatingDbContext = "EnableCommand_CreatingDbContext";
        internal const string EnableCommand_EnablingEfMigrations = "EnableCommand_EnablingEfMigrations";
        internal const string ExecuteCommand_MigrationRescaffolded = "ExecuteCommand_MigrationRescaffolded";
        internal const string ExecuteCommand_MigrationScaffolded = "ExecuteCommand_MigrationScaffolded";
        internal const string ExecuteCommand_RescaffoldingMigration = "ExecuteCommand_RescaffoldingMigration";
        internal const string ExecuteCommand_ScaffoldingMigration = "ExecuteCommand_ScaffoldingMigration";
        internal const string ForeignKeyDefinitionExtractionFailed = "ForeignKeyDefinitionExtractionFailed";
        internal const string HistoryTracker_CannotGetOldContent = "HistoryTracker_CannotGetOldContent";
        internal const string HistoryTracker_Error = "HistoryTracker_Error";
        internal const string HistoryTracker_InvalidItemType = "HistoryTracker_InvalidItemType";
        internal const string HistoryTracker_MoreThanOneFileInProjectItem = "HistoryTracker_MoreThanOneFileInProjectItem";
        internal const string IndexOrderInvalid = "IndexOrderInvalid";
        internal const string InvalidModelMigrationId = "InvalidModelMigrationId";
        internal const string LoggingModelMigrator_ApplyingModelChanges = "LoggingModelMigrator_ApplyingModelChanges";
        internal const string LoggingModelMigrator_GeneratingDbMigration = "LoggingModelMigrator_GeneratingDbMigration";
        internal const string LoggingModelMigrator_MigrateList = "LoggingModelMigrator_MigrateList";
        internal const string LoggingModelMigrator_MigrateOne = "LoggingModelMigrator_MigrateOne";
        internal const string LoggingModelMigrator_MigrateSuccess = "LoggingModelMigrator_MigrateSuccess";
        internal const string LoggingModelMigrator_NoMigrations = "LoggingModelMigrator_NoMigrations";
        internal const string LoggingModelMigrator_UpdatingDb = "LoggingModelMigrator_UpdatingDb";
        internal const string MappingInformationRemover_MissingImplementation = "MappingInformationRemover_MissingImplementation";
        internal const string MappingInformationsGenerator_InvalidCSharpTokenType = "MappingInformationsGenerator_InvalidCSharpTokenType";
        internal const string MappingInformationsGenerator_ParameterNotSupported = "MappingInformationsGenerator_ParameterNotSupported";
        internal const string MigrationOperationInverseMissing = "MigrationOperationInverseMissing";
        internal const string ModelChangesExecutor_CannotGetMethodCode = "ModelChangesExecutor_CannotGetMethodCode";
        internal const string ModelChangesExecutor_CannotSetMethodCode = "ModelChangesExecutor_CannotSetMethodCode";
        internal const string ModelChangesExecutor_FailedToAddDbSetProperty = "ModelChangesExecutor_FailedToAddDbSetProperty";
        internal const string ModelChangesExecutor_FailedToAddMappingInformation = "ModelChangesExecutor_FailedToAddMappingInformation";
        internal const string ModelChangesExecutor_FailedToAddProperty = "ModelChangesExecutor_FailedToAddProperty";
        internal const string ModelChangesExecutor_FailedToCreateClass = "ModelChangesExecutor_FailedToCreateClass";
        internal const string ModelChangesExecutor_FailedToFindDbSetProperty = "ModelChangesExecutor_FailedToFindDbSetProperty";
        internal const string ModelChangesExecutor_FailedToFindMethod = "ModelChangesExecutor_FailedToFindMethod";
        internal const string ModelChangesExecutor_FailedToFindProperty = "ModelChangesExecutor_FailedToFindProperty";
        internal const string ModelChangesExecutor_FailedToRemoveClass = "ModelChangesExecutor_FailedToRemoveClass";
        internal const string ModelChangesExecutor_FailedToRemoveDbSetProperty = "ModelChangesExecutor_FailedToRemoveDbSetProperty";
        internal const string ModelChangesExecutor_FailedToRemoveProperty = "ModelChangesExecutor_FailedToRemoveProperty";
        internal const string ModelChangesExecutor_FailedToRenameClass = "ModelChangesExecutor_FailedToRenameClass";
        internal const string ModelChangesExecutor_FailedToRenameProperty = "ModelChangesExecutor_FailedToRenameProperty";
        internal const string ModelChangesExecutor_FailedToSetBaseClass = "ModelChangesExecutor_FailedToSetBaseClass";
        internal const string ModelChangesExecutor_MissingImplementation = "ModelChangesExecutor_MissingImplementation";
        internal const string ModelEnableSuccessfull = "ModelEnableSuccessfull";
        internal const string ModelMigrationGenerator_ImplementationMissing = "ModelMigrationGenerator_ImplementationMissing";
        internal const string ModelMigrationGenerator_PropertyImplementationMissing = "ModelMigrationGenerator_PropertyImplementationMissing";
        internal const string ModelMigrationGenerator_SBytePropertyNotSupported = "ModelMigrationGenerator_SBytePropertyNotSupported";
        internal const string ModelMigrationsAlreadyEnabled = "ModelMigrationsAlreadyEnabled";
        internal const string ModelMigrationsDirectoryIsRooted = "ModelMigrationsDirectoryIsRooted";
        internal const string ModelMigrationsNotEnabled = "ModelMigrationsNotEnabled";
        internal const string MultipleMigrationsFound = "MultipleMigrationsFound";
        internal const string NoMigrationsToApplyOrRevert = "NoMigrationsToApplyOrRevert";
        internal const string ParameterParser_InvalidVisibility = "ParameterParser_InvalidVisibility";
        internal const string ParameterParser_UnknownPropertyType = "ParameterParser_UnknownPropertyType";
        internal const string ParameterParser_WrongPropertyFormat = "ParameterParser_WrongPropertyFormat";
        internal const string PreconditionFailed = "PreconditionFailed";
        internal const string Precondition_ClassExists = "Precondition_ClassExists";
        internal const string Precondition_ClassHasBase = "Precondition_ClassHasBase";
        internal const string Precondition_ClassNotExists = "Precondition_ClassNotExists";
        internal const string Precondition_PropertiesNotExistsInClass = "Precondition_PropertiesNotExistsInClass";
        internal const string PrimitiveTypeKindInvalid = "PrimitiveTypeKindInvalid";
        internal const string ProjectExtensions_PathMustBeAbsolute = "ProjectExtensions_PathMustBeAbsolute";
        internal const string ProjectExtensions_PathMustBeRelative = "ProjectExtensions_PathMustBeRelative";
        internal const string PropertyDefinitionExtractionFailed = "PropertyDefinitionExtractionFailed";
        internal const string RelationshipMultiplicityInvalid = "RelationshipMultiplicityInvalid";
        internal const string Rescaffold_NoPendingMigration = "Rescaffold_NoPendingMigration";
        internal const string Rescaffold_SpecifiedNameNotSameAsPending = "Rescaffold_SpecifiedNameNotSameAsPending";
        internal const string TransformationInverseMissing = "TransformationInverseMissing";
        internal const string Transformations_FkNamesAndFkPropsBothSpecified = "Transformations_FkNamesAndFkPropsBothSpecified";
        internal const string Transformations_InvalidManyNavigationProperty = "Transformations_InvalidManyNavigationProperty";
        internal const string Transformations_InvalidMultiplicityManyToMany = "Transformations_InvalidMultiplicityManyToMany";
        internal const string Transformations_InvalidMultiplicityOneToMany = "Transformations_InvalidMultiplicityOneToMany";
        internal const string Transformations_InvalidMultiplicityOneToOneFk = "Transformations_InvalidMultiplicityOneToOneFk";
        internal const string Transformations_InvalidMultiplicityOneToOnePk = "Transformations_InvalidMultiplicityOneToOnePk";
        internal const string Transformations_NavigationPropertyMissing = "Transformations_NavigationPropertyMissing";
        internal const string TypeFinder_MultipleTypesFound = "TypeFinder_MultipleTypesFound";

        private static EntityRes loader;
        private readonly ResourceManager resources;

        private EntityRes()
        {
            resources = new ResourceManager(
                "EfModelMigrations.Properties.Resources",
                typeof(EfModelMigrations.ModelMigration).Assembly);
        }

        private static EntityRes GetLoader()
        {
            if (loader == null)
            {
                var sr = new EntityRes();
                Interlocked.CompareExchange(ref loader, sr, null);
            }
            return loader;
        }

        private static CultureInfo Culture
        {
            get { return null /*use ResourceManager default, CultureInfo.CurrentUICulture*/; }
        }

        public static ResourceManager Resources
        {
            get { return GetLoader().resources; }
        }

        public static string GetString(string name, params object[] args)
        {
            var sys = GetLoader();
            if (sys == null)
            {
                return null;
            }

            var res = sys.resources.GetString(name, Culture);

            if (args != null
                && args.Length > 0)
            {
                for (var i = 0; i < args.Length; i ++)
                {
                    var value = args[i] as String;
                    if (value != null
                        && value.Length > 1024)
                    {
                        args[i] = value.Substring(0, 1024 - 3) + "...";
                    }
                }
                return String.Format(CultureInfo.CurrentCulture, res, args);
            }
            else
            {
                return res;
            }
        }

        public static string GetString(string name)
        {
            var sys = GetLoader();
            if (sys == null)
            {
                return null;
            }
            return sys.resources.GetString(name, Culture);
        }

        public static string GetString(string name, out bool usedFallback)
        {
            // always false for this version of gensr
            usedFallback = false;
            return GetString(name);
        }

        public static object GetObject(string name)
        {
            var sys = GetLoader();
            if (sys == null)
            {
                return null;
            }
            return sys.resources.GetObject(name, Culture);
        }
    }
}
